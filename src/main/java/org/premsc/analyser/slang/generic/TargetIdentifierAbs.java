package org.premsc.analyser.slang.generic;

import io.github.treesitter.jtreesitter.Node;
import org.premsc.analyser.parser.tree.ITreeHelper;
import org.premsc.analyser.rules.Warning;
import org.premsc.analyser.slang.tokens.RuleExpression;

import java.util.List;
import java.util.Objects;

/**
 * Abstract class representing a target identifier in a rule expression.
 * A target identifier is used to specify the target of a rule.
 */
public abstract class TargetIdentifierAbs extends IdentifierAbs {

    /**
     * Constructor for the TargetIdentifierAbs class.
     *
     * @param parent the parent RuleExpression
     * @param node   the Tree-sitter node
     * @param name   the name of the identifier
     */
    protected TargetIdentifierAbs(RuleExpression parent, Node node, String name) {
        super(parent, node, name);
    }

    /**
     * Check if this identifier is a target identifier.
     *
     * @return true if this identifier is a target identifier, false otherwise
     */
    public boolean isTarget() {
        return Objects.equals(this.name, "target");
    }

    /**
     * Get the results of this target identifier.
     *
     * @param treeHelper the tree helper to use for analysis
     * @return a list of warnings generated by this target identifier
     */
    public abstract List<Warning> getResults(ITreeHelper treeHelper);
}
